services:
  db:
    image: postgres:15
    container_name: st_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-tasks}
      POSTGRES_USER: ${POSTGRES_USER:-tasks}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-tasks}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-tasks} -d ${POSTGRES_DB:-tasks}"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: st_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  web:
    build:
      context: .
    container_name: st_web
    volumes:
      - .:/app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-tasks}:${POSTGRES_PASSWORD:-tasks}@db:5432/${POSTGRES_DB:-tasks}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
    container_name: st_worker
    command: sh -c "celery -A config worker -l info"
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      DATABASE_URL: postgres://${POSTGRES_USER:-tasks}:${POSTGRES_PASSWORD:-tasks}@db:5432/${POSTGRES_DB:-tasks}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  beat:
    build:
      context: .
    container_name: st_beat
    command: sh -c "celery -A config beat -l info"
    env_file: .env
    environment:
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      DATABASE_URL: postgres://${POSTGRES_USER:-tasks}:${POSTGRES_PASSWORD:-tasks}@db:5432/${POSTGRES_DB:-tasks}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

volumes:
  db_data:
